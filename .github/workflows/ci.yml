name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run build
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}
          NEXT_PUBLIC_APP_URL: https://pray-companion.vercel.app
          NEXT_PUBLIC_ENVIRONMENT: production
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'placeholder-key' }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID || 'placeholder' }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET || 'placeholder' }}

      - name: Check bundle size
        run: |
          echo "Build completed successfully"
          echo "Checking for large bundles..."
          find .next -name "*.js" -size +1M | head -5

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for vulnerable dependencies
        run: |
          echo "Checking for known vulnerabilities..."
          npx audit-ci --moderate

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [lint-and-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Vercel will automatically deploy a preview for this PR. Check the deployment status in the Vercel dashboard.'
            });

  health-check:
    name: Health Check (Production)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [lint-and-test]

    steps:
      - name: Wait for deployment
        run: sleep 60

      - name: Health check
        run: |
          echo "Performing health check on production deployment..."
          # Wait a bit more for deployment to be ready
          sleep 30
          
          # Check if the site is accessible
          curl -f https://pray-companion.vercel.app/api/health || echo "Health check endpoint not ready"
          
          # Check main page
          curl -f https://pray-companion.vercel.app/ || echo "Main page not ready"
          
          echo "Health check completed"